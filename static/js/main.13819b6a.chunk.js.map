{"version":3,"sources":["components/AllLists.jsx","components/AddList.jsx","components/Sidebar.jsx","components/AddReminder.jsx","components/AllReminders.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllLists","state","listName","cName","this","props","currentlySelected","lists","length","className","map","list","onClick","onDeleteList","onClickedList","renderClassName","style","renderListNames","Component","AddList","handleChange","event","setState","target","value","handleKeyPress","key","onAddList","handleClick","type","placeholder","onChange","c","onKeyPress","Sidebar","newName","AddReminder","reminderName","onAddReminder","AllReminders","reminders","previouslySelected","listElements","reminder","onDeleteReminder","renderAddReminders","App","axios","get","then","res","initialLists","data","forEach","l","push","name","pop","config","params","list_item","toLowerCase","includes","console","log","post","filter","r","handleClickedList","handleAddList","handleDeleteList","handleAddReminder","handleDeleteReminder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13819b6a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AllLists.css\";\n\nclass AllLists extends Component {\n  state = {};\n\n  renderClassName(listName) {\n    let cName = \"btn btn-\";\n\n    listName === this.props.currentlySelected\n      ? (cName += \"light\")\n      : (cName += \"dark\");\n\n    cName += \" sideBarList\";\n    return cName;\n  }\n\n  renderListNames() {\n    if (this.props.lists.length === 0)\n      return <p>There are currently no lists!</p>;\n\n    return (\n      <div className=\"list-group\">\n        {this.props.lists.map((list) => (\n          <div key={list} className=\"inLine\">\n            <button\n              onClick={() => this.props.onDeleteList(list)}\n              className=\" btn btn-danger deleteListButton\"\n            >\n              X\n            </button>\n            <button\n              onClick={() => {\n                this.props.onClickedList(list);\n              }}\n              className={this.renderClassName(list)}\n              style={{ \"box-shadow\": \"none\" }}\n            >\n              {list}\n            </button>\n\n            <br />\n          </div>\n        ))}\n        <br />\n      </div>\n    );\n  }\n\n  render() {\n    return <span>{this.renderListNames()}</span>;\n  }\n}\n\nexport default AllLists;\n","import React, { Component } from \"react\";\nimport \"./AddList.css\";\n\nclass AddList extends Component {\n  state = { listName: \"\" };\n\n  handleChange = (event) => {\n    this.setState({ listName: event.target.value });\n  };\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.props.onAddList(this.state.listName);\n      this.setState({\n        listName: \"\",\n      });\n    }\n  };\n\n  handleClick = () => {\n    this.props.onAddList(this.state.listName);\n    this.setState({\n      listName: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"inLine\">\n        <button\n          onClick={this.handleClick}\n          className=\"btn btn-primary addButton\"\n        >\n          ✓\n        </button>\n        <input\n          value={this.state.listName}\n          type=\"text\"\n          placeholder=\"Type list name here\"\n          onChange={(c) => this.handleChange(c)}\n          onKeyPress={this.handleKeyPress}\n          className=\"textBox\"\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default AddList;\n","import React, { Component } from \"react\";\nimport \"./Sidebar.css\";\nimport AllLists from \"./AllLists\";\nimport AddList from \"./AddList\";\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"sideBarBox\">\n        <AllLists\n          currentlySelected={this.props.currentlySelected}\n          lists={this.props.lists}\n          onDeleteList={(listName) => this.props.onDeleteList(listName)}\n          onClickedList={(listName) => this.props.onClickedList(listName)}\n        />\n        <AddList onAddList={(newName) => this.props.onAddList(newName)} />\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from \"react\";\r\nimport \"./AddReminder.css\";\r\n\r\nclass AddReminder extends Component {\r\n  state = { reminderName: \"\" };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ reminderName: event.target.value });\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      this.props.onAddReminder(this.state.reminderName);\r\n      this.setState({\r\n        reminderName: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onAddReminder(this.state.reminderName);\r\n    this.setState({\r\n      reminderName: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inLine\">\r\n        <button\r\n          onClick={this.handleClick}\r\n          className=\"btn btn-primary addButton deleteButton\"\r\n        >\r\n          ✓\r\n        </button>\r\n        <input\r\n          value={this.state.reminderName}\r\n          type=\"text\"\r\n          placeholder=\"Type reminder here\"\r\n          onChange={(c) => this.handleChange(c)}\r\n          onKeyPress={this.handleKeyPress}\r\n          className=\"inputBox\"\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddReminder;\r\n","import React, { Component } from \"react\";\r\nimport \"./AllReminders.css\";\r\nimport AddReminder from \"./AddReminder\";\r\n\r\nclass AllReminders extends Component {\r\n  state = { reminders: [], previouslySelected: \"\" };\r\n\r\n  renderAddReminders() {\r\n    if (this.props.currentlySelected !== \"\") {\r\n      return (\r\n        <AddReminder\r\n          onAddReminder={(reminderName) => {\r\n            this.props.onAddReminder(reminderName);\r\n          }}\r\n        ></AddReminder>\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"listBox\">\r\n        <h1 className=\"listHeading\">{this.props.currentlySelected}</h1>\r\n        <div className=\"list-group\">\r\n          {this.props.listElements.map((reminder) => (\r\n            <div key={reminder}>\r\n              <button\r\n                className=\"btn btn-danger listElementsDelete\"\r\n                onClick={() => this.props.onDeleteReminder(reminder)}\r\n              >\r\n                X\r\n              </button>\r\n              <button className=\"btn btn-dark listElements\">{reminder}</button>\r\n\r\n              <br />\r\n            </div>\r\n          ))}\r\n          <br />\r\n        </div>\r\n        {this.renderAddReminders()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllReminders;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport AllReminders from \"./components/AllReminders\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  state = {\n    lists: [],\n    currentlySelected: \"\",\n    listElements: [],\n  };\n\n  componentDidMount() {\n    axios.get(\"/initialise\").then((res) => {\n      var initialLists = this.state.lists;\n      res.data.forEach((l) => {\n        initialLists.push(l.name);\n      });\n      this.setState({ initialLists: this.state.lists });\n    });\n  }\n\n  handleClickedList(listName) {\n    var { currentlySelected } = this.state;\n    currentlySelected = listName;\n\n    var { listElements } = this.state;\n    while (listElements.length !== 0) {\n      listElements.pop();\n    }\n\n    var config = {\n      params: {\n        listName: listName,\n      },\n    };\n\n    axios.get(\"/get_items\", config).then((res) => {\n      res.data.forEach((l) => {\n        listElements.push(l.list_item);\n      });\n      this.setState({ listElements });\n    });\n    this.setState({ currentlySelected });\n  }\n\n  handleAddList(newName) {\n    if (newName === \"\") {\n      console.log(\"A list must have a name\");\n      return;\n    }\n    const { lists } = this.state;\n    lists.map((l) => l.toLowerCase()).includes(newName.toLowerCase())\n      ? console.log(\"A list with this name already exists\")\n      : lists.push(newName);\n    this.setState({ lists: lists });\n\n    axios.post(\"/add_list\", { newName: newName });\n  }\n\n  handleDeleteList(listName) {\n    var { currentlySelected } = this.state;\n    var { listElements } = this.state;\n    currentlySelected = \"\";\n    listElements = [];\n    var lists = this.state.lists.filter((l) => l !== listName);\n    this.setState({ lists: lists });\n    this.setState({ currentlySelected });\n    this.setState({ listElements });\n    axios.post(\"/delete_list\", { listName: listName });\n  }\n\n  handleAddReminder(reminderName) {\n    if (reminderName === \"\") {\n      console.log(\"A reminder cannot be empty\");\n      return;\n    }\n    var { listElements } = this.state;\n\n    listElements\n      .map((l) => l.toLowerCase())\n      .includes(reminderName.toLowerCase())\n      ? console.log(\"A list with this name already exists\")\n      : listElements.push(reminderName);\n    this.setState({ listElements });\n    axios.post(\"/add_reminder\", {\n      listName: this.state.currentlySelected,\n      reminderName: reminderName,\n    });\n  }\n\n  handleDeleteReminder(reminderName) {\n    var listElements = this.state.listElements.filter(\n      (r) => r !== reminderName\n    );\n    this.setState({ listElements });\n\n    axios.post(\"/delete_reminder\", {\n      listName: this.state.currentlySelected,\n      reminderName: reminderName,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Sidebar\n          currentlySelected={this.state.currentlySelected}\n          lists={this.state.lists}\n          onClickedList={(listName) => this.handleClickedList(listName)}\n          onAddList={(newName) => this.handleAddList(newName)}\n          onDeleteList={(listName) => this.handleDeleteList(listName)}\n        />\n        <AllReminders\n          currentlySelected={this.state.currentlySelected}\n          listElements={this.state.listElements}\n          onAddReminder={(reminderName) => this.handleAddReminder(reminderName)}\n          onDeleteReminder={(reminderName) =>\n            this.handleDeleteReminder(reminderName)\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}